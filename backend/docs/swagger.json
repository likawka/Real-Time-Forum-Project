{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for kood-rt-forum.",
        "title": "kood-rt-forum API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Logs in a user with the provided email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logs out the currently authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out a user",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "401": {
                        "description": "Missing session ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user with the provided registration details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "409": {
                        "description": "User already registered",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all chats that the authenticated user is a participant of.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get all chats for a user",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved chats",
                        "schema": {
                            "$ref": "#/definitions/api.ChatsList"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new chat between two specified users and returns the chat hash.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create a new chat",
                "parameters": [
                    {
                        "description": "Chat creation details",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateChatMessage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created chat",
                        "schema": {
                            "$ref": "#/definitions/api.ChatCreateResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatHash}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the details of a specific chat and its messages if the user has access to it.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get chat details by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat hash",
                        "name": "chatHash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved chat details",
                        "schema": {
                            "$ref": "#/definitions/api.Chat"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "description": "Retrieves all posts from the database, with optional sorting and pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get all posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sorting criteria: new, old, popular (default: new)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 20)",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " pagination": {
                                            "$ref": "#/definitions/api.GeneralPagination"
                                        },
                                        "payload": {
                                            "$ref": "#/definitions/api.PostsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Posts not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new post with the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "Post data to create",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PostCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/api.PostCreateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized: User is not authenticated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Error creating post",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "description": "Retrieves a specific post and its comments by ID, with optional sorting and pagination for comments.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get a specific post and its comments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sorting criteria: new, old, popular (default: new)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 20)",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " pagination": {
                                            "$ref": "#/definitions/api.GeneralPagination"
                                        },
                                        "payload": {
                                            "$ref": "#/definitions/api.PostAndCommentsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid post ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/posts/{post_id}/comments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new comment for a specified post ID. Requires authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create a new comment for a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CommentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/api.CommentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/rate": {
            "put": {
                "parameters": [
                    {
                        "description": "Rate details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "$ref": "#/definitions/api.RateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieves all users with optional sorting and pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sorting criteria: new, old, name_ABC (default: name_ABC)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 20)",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " pagination": {
                                            "$ref": "#/definitions/api.GeneralPagination"
                                        },
                                        "payload": {
                                            "$ref": "#/definitions/api.GetUsersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/{nickname}/{type}": {
            "get": {
                "description": "Retrieves posts or comments by user nickname with optional sorting and pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get posts or comments by user nickname",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Nickname (e.g., admin)",
                        "name": "nickname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of data to retrieve: posts or comments",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sorting criteria: new, old, popular (default: new)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 20)",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " pagination": {
                                            "$ref": "#/definitions/api.GeneralPagination"
                                        },
                                        "payload": {
                                            "$ref": "#/definitions/api.GetUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/api.ErrorDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Chat": {
            "type": "object",
            "properties": {
                "ChatInfo": {
                    "$ref": "#/definitions/api.ChatInfo"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MessageMessage"
                    }
                }
            }
        },
        "api.ChatCreateResponse": {
            "type": "object",
            "properties": {
                "chatHash": {
                    "type": "string"
                }
            }
        },
        "api.ChatInfo": {
            "type": "object",
            "properties": {
                "chatHash": {
                    "type": "string"
                },
                "user1_id": {
                    "type": "integer"
                },
                "user2_id": {
                    "type": "integer"
                }
            }
        },
        "api.ChatsList": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ChatInfo"
                    }
                }
            }
        },
        "api.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "post_id": {
                    "type": "integer"
                },
                "rate": {
                    "$ref": "#/definitions/api.Rate"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.CommentCreateRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Test comment"
                }
            }
        },
        "api.CommentResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/api.Comment"
                }
            }
        },
        "api.CreateChatMessage": {
            "type": "object",
            "properties": {
                "user1_id": {
                    "type": "integer"
                },
                "user2_id": {
                    "type": "integer"
                }
            }
        },
        "api.ErrorDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ValidationError"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.GeneralPagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "description": "Поточна сторінка",
                    "type": "integer"
                },
                "order_by": {
                    "description": "Тип сортування або порядок",
                    "type": "string"
                },
                "per_page": {
                    "description": "Кількість елементів на сторінці",
                    "type": "integer"
                },
                "total_count": {
                    "description": "Загальна кількість елементів",
                    "type": "integer"
                },
                "total_pages": {
                    "description": "Загальна кількість сторінок",
                    "type": "integer"
                }
            }
        },
        "api.GetUserResponse": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Comment"
                    }
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Post"
                    }
                },
                "user": {
                    "$ref": "#/definitions/api.User"
                }
            }
        },
        "api.GetUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Users"
                    }
                }
            }
        },
        "api.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "!QAZ2wsx"
                }
            }
        },
        "api.MessageMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "roomHash": {
                    "type": "string"
                },
                "sender": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.Metadata": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.Post": {
            "type": "object",
            "properties": {
                "amount_of_comments": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Category"
                    }
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "rate": {
                    "$ref": "#/definitions/api.Rate"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.PostAndCommentsResponse": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Comment"
                    }
                },
                "post": {
                    "$ref": "#/definitions/api.Post"
                }
            }
        },
        "api.PostCreateRequest": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "string",
                    "example": "#category1 #category2"
                },
                "content": {
                    "type": "string",
                    "example": "Test content"
                },
                "title": {
                    "type": "string",
                    "example": "Test title"
                }
            }
        },
        "api.PostCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.PostsResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Post"
                    }
                }
            }
        },
        "api.Rate": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.RateRequest": {
            "type": "object",
            "properties": {
                "comment_id": {
                    "type": "integer",
                    "example": 2
                },
                "post_id": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "string",
                    "example": "up"
                }
            }
        },
        "api.RateResponse": {
            "type": "object",
            "properties": {
                "rate": {
                    "$ref": "#/definitions/api.Rate"
                }
            }
        },
        "api.RegistrationRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string",
                    "example": "02.02.2002"
                },
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "nickname": {
                    "type": "string",
                    "example": "test"
                },
                "password": {
                    "type": "string",
                    "example": "!QAZ2wsx"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "authenticated": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Metadata"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.User": {
            "type": "object",
            "properties": {
                "amount_of_comments": {
                    "type": "integer"
                },
                "amount_of_posts": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "api.Users": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last_activity": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "api.ValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}